{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/Desktop/Venkat/LCNC/FE/src/components/automater.js"],"sourcesContent":["// // components/BlockEditor.tsx\n// \"use client\";\n// import { useState } from \"react\";\n\n// export default function BlockEditor() {\n//   const [command, setCommand] = useState(\"\");\n//   const [html, setHtml] = useState(\"\");\n//   const [templateId, setTemplateId] = useState(\"\");\n//   const [loading, setLoading] = useState(false); // Loading state\n\n//   // const fetchBlock = async () => {\n//   //       setLoading(true);\n\n//   //   const res = await fetch(\"http://127.0.0.1:5000/generate-ui\", {\n//   //     method: \"POST\",\n//   //     headers: { \"Content-Type\": \"application/json\" },\n//   //     body: JSON.stringify({ command }),\n//   //   });\n//   //   let data = await res.json();\n\n//   //   console.log(\"Received data:\", data);\n//   //                // Remove extra whitespace\n\n//   //   setHtml(data.html);\n//   //   setTemplateId(data.template_id);\n//   // };\n\n//   // const saveBlock = async () => {\n//   //   const res = await fetch(\"http://127.0.0.1:5000/save-ui\", {\n//   //     method: \"POST\",\n//   //     headers: { \"Content-Type\": \"application/json\" },\n//   //     body: JSON.stringify({\n//   //       html,\n//   //       parent_template_id: templateId,\n//   //       user: \"demo_user\",\n//   //     }),\n//   //   });\n//   //   alert(\"Saved!\");\n//   // };\n\n//   // return (\n//   //   <div>\n//   //     <textarea\n//   //       placeholder=\"Describe your UI component...\"\n//   //       className=\"w-full p-2 border mb-4\"\n//   //       rows={3}\n//   //       value={command}\n//   //       onChange={(e) => setCommand(e.target.value)}\n//   //     />\n//   //     <button onClick={fetchBlock} className=\"bg-blue-600 text-white p-2 rounded\">\n//   //       Generate UI\n//   //     </button>\n//   //     <div className=\"my-4\">\n//   //       <h2 className=\"font-semibold\">Editable Preview</h2>\n//   //       <div\n//   //         contentEditable\n//   //         className=\"p-4 border min-h-[100px]\"\n//   //         dangerouslySetInnerHTML={{ __html: html }}\n//   //         onInput={(e) => setHtml(e.currentTarget.innerHTML)}\n//   //       />\n//   //     </div>\n//   //     <button onClick={saveBlock} className=\"bg-green-600 text-white p-2 rounded\">\n//   //       Save Changes\n//   //     </button>\n//   //   </div>\n//   // );\n\n\n//   const fetchBlock = async () => {\n//     setLoading(true);\n//     try {\n//       const res = await fetch(\"http://127.0.0.1:5000/generate-ui\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ command }),\n//       });\n//       let data = await res.json();\n\n//       console.log(\"Received data:\", data);\n\n//       setHtml(data.html);\n//       setTemplateId(data.template_id);\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   const saveBlock = async () => {\n//     setLoading(true);\n//     try {\n//       await fetch(\"http://127.0.0.1:5000/save-ui\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({\n//           html,\n//           parent_template_id: templateId,\n//           user: \"demo_user\",\n//         }),\n//       });\n//       alert(\"Saved!\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <textarea\n//         placeholder=\"Describe your UI component...\"\n//         className=\"w-full p-2 border mb-4\"\n//         rows={3}\n//         value={command}\n//         onChange={(e) => setCommand(e.target.value)}\n//         disabled={loading}\n//       />\n//       <button\n//         onClick={fetchBlock}\n//         className=\"bg-blue-600 text-white p-2 rounded\"\n//         disabled={loading}\n//       >\n//         {loading ? \"Generating...\" : \"Generate UI\"}\n//       </button>\n//       <div className=\"my-4\">\n//         <h2 className=\"font-semibold\">Editable Preview</h2>\n//         <div\n//           contentEditable\n//           className=\"p-4 border min-h-[100px]\"\n//           dangerouslySetInnerHTML={{ __html: html }}\n//           onInput={(e) => setHtml(e.currentTarget.innerHTML)}\n//         />\n//       </div>\n//       <button\n//         onClick={saveBlock}\n//         className=\"bg-green-600 text-white p-2 rounded\"\n//         disabled={loading}\n//       >\n//         {loading ? \"Saving...\" : \"Save Changes\"}\n//       </button>\n//       {loading && (\n//         <div className=\"mt-2 text-blue-600 font-semibold\">Loading...</div>\n//       )}\n//     </div>\n//   );\n\n\n// }\n\n\nimport React, { useState, useEffect, useRef } from 'react';\n\nclass AgenticRAGClient {\n    constructor(baseUrl = 'http://127.0.0.1:5000') {\n        this.baseUrl = baseUrl;\n        this.currentTemplateId = null;\n        this.agentReasoning = null;\n    }\n\n    async generateUI(command) {\n        try {\n            const response = await fetch(`${this.baseUrl}/generate-ui`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ command }),\n            });\n            const data = await response.json();\n            if (response.ok) {\n                this.currentTemplateId = data.template_id;\n                this.agentReasoning = data.agent_reasoning;\n                return {\n                    success: true,\n                    html: data.html,\n                    templateId: data.template_id,\n                    source: data.source,\n                    reasoning: data.agent_reasoning,\n                };\n            } else {\n                return {\n                    success: false,\n                    error: data.error,\n                    agentResponse: data.agent_response,\n                };\n            }\n        } catch (error) {\n            return { success: false, error: `Network error: ${error.message}` };\n        }\n    }\n\n    async searchTemplates(query, maxResults = 5) {\n        try {\n            const response = await fetch(`${this.baseUrl}/search-templates`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ query, max_results: maxResults }),\n            });\n            const data = await response.json();\n            if (response.ok) {\n                return {\n                    success: true,\n                    results: data.results,\n                    totalFound: data.total_found,\n                    query: data.query,\n                };\n            } else {\n                return { success: false, error: data.error };\n            }\n        } catch (error) {\n            return { success: false, error: `Network error: ${error.message}` };\n        }\n    }\n\n    async saveUI(html, parentTemplateId = null, user = 'test_user') {\n        try {\n            const response = await fetch(`${this.baseUrl}/save-ui`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    html,\n                    parent_template_id: parentTemplateId || this.currentTemplateId,\n                    user,\n                }),\n            });\n            const data = await response.json();\n            if (response.ok) {\n                this.currentTemplateId = data.template_id;\n                return {\n                    success: true,\n                    message: data.message,\n                    templateId: data.template_id,\n                };\n            } else {\n                return { success: false, error: data.error };\n            }\n        } catch (error) {\n            return { success: false, error: `Network error: ${error.message}` };\n        }\n    }\n}\n\nconst ragClient = new AgenticRAGClient();\n\nconst App = () => {\n    const [command, setCommand] = useState('');\n    const [searchQuery, setSearchQuery] = useState('');\n    const [status, setStatus] = useState({ message: '', type: '' });\n    const [loading, setLoading] = useState(false);\n    const [uiContent, setUiContent] = useState({ html: '<p className=\"text-center text-gray-500 italic mt-24\">Generated UI will appear here...</p>', templateId: '', source: '' });\n    const [searchResults, setSearchResults] = useState([]);\n    const [totalFound, setTotalFound] = useState(0);\n    const [reasoning, setReasoning] = useState({ content: '', source: '' });\n    const [modalContent, setModalContent] = useState(null);\n    const uiContainerRef = useRef(null);\n\n    const showStatus = (message, type) => {\n        setStatus({ message, type });\n        if (type !== 'error') {\n            setTimeout(() => setStatus({ message: '', type: '' }), 5000);\n        }\n    };\n\n    const showLoading = (show) => setLoading(show);\n\n    const generateUI = async () => {\n        if (!command.trim()) {\n            showStatus('Please enter a command to generate UI.', 'error');\n            return;\n        }\n        showStatus('🤖 Agent is analyzing your request...', 'info');\n        showLoading(true);\n        try {\n            const result = await ragClient.generateUI(command);\n            if (result.success) {\n                setUiContent({ html: result.html, templateId: result.templateId, source: result.source });\n                setReasoning({ content: result.reasoning, source: result.source });\n                showStatus(`✅ UI generated successfully using ${result.source}!`, 'success');\n            } else {\n                showStatus(`❌ Error: ${result.error}`, 'error');\n                if (result.agentResponse) {\n                    setReasoning({ content: result.agentResponse, source: 'error' });\n                }\n            }\n        } catch (error) {\n            showStatus(`❌ Unexpected error: ${error.message}`, 'error');\n        } finally {\n            showLoading(false);\n        }\n    };\n\n    const searchTemplates = async () => {\n        if (!searchQuery.trim()) {\n            showStatus('Please enter a search query.', 'error');\n            return;\n        }\n        showStatus('🔍 Searching for similar templates...', 'info');\n        showLoading(true);\n        try {\n            const result = await ragClient.searchTemplates(searchQuery, 5);\n            if (result.success) {\n                setSearchResults(result.results);\n                setTotalFound(result.totalFound);\n                showStatus(`🔍 Found ${result.totalFound} similar templates`, 'success');\n            } else {\n                showStatus(`❌ Search error: ${result.error}`, 'error');\n            }\n        } catch (error) {\n            showStatus(`❌ Search failed: ${error.message}`, 'error');\n        } finally {\n            showLoading(false);\n        }\n    };\n\n    const saveUI = async () => {\n        if (!uiContainerRef.current || uiContainerRef.current.innerHTML.includes('Generated UI will appear here')) {\n            showStatus('No UI to save. Generate one first.', 'error');\n            return;\n        }\n        showStatus('💾 Saving UI template...', 'info');\n        showLoading(true);\n        try {\n            const result = await ragClient.saveUI(uiContainerRef.current.innerHTML);\n            if (result.success) {\n                showStatus(`✅ ${result.message} (ID: ${result.templateId})`, 'success');\n            } else {\n                showStatus(`❌ Save error: ${result.error}`, 'error');\n            }\n        } catch (error) {\n            showStatus(`❌ Save failed: ${error.message}`, 'error');\n        } finally {\n            showLoading(false);\n        }\n    };\n\n    const clearUI = () => {\n        setUiContent({ html: '<p className=\"text-center text-gray-500 italic mt-24\">Generated UI will appear here...</p>', templateId: '', source: '' });\n        setReasoning({ content: '', source: '' });\n        showStatus('🧹 UI cleared', 'success');\n    };\n\n    const clearSearch = () => {\n        setSearchResults([]);\n        setSearchQuery('');\n        setTotalFound(0);\n        showStatus('🧹 Search results cleared', 'success');\n    };\n\n    const useTemplate = (templateId) => {\n        showStatus(`📋 Loading template ${templateId}...`, 'info');\n    };\n\n    const viewTemplate = (templateId) => {\n        const template = searchResults.find(t => t.template_id === templateId);\n        if (template) {\n            setModalContent({ id: templateId, html: template.html_preview });\n        }\n    };\n\n    const copyToClipboard = (text) => {\n        navigator.clipboard.writeText(text).then(() => {\n            showStatus('📋 HTML copied to clipboard!', 'success');\n        });\n    };\n\n    const handleExampleClick = (prompt) => {\n        setCommand(prompt);\n        generateUI();\n    };\n\n    useEffect(() => {\n        const handleKeyDown = (e) => {\n            if (e.ctrlKey || e.metaKey) {\n                e.preventDefault();\n                switch (e.key) {\n                    case 'Enter':\n                        generateUI();\n                        break;\n                    case 's':\n                        saveUI();\n                        break;\n                    case 'f':\n                        document.getElementById('searchInput').focus();\n                        break;\n                }\n            }\n        };\n        document.addEventListener('keydown', handleKeyDown);\n        return () => document.removeEventListener('keydown', handleKeyDown);\n    }, [command, uiContent]);\n\n    useEffect(() => {\n        const observer = new MutationObserver(() => {\n            clearTimeout(window.autoSaveTimeout);\n            window.autoSaveTimeout = setTimeout(() => {\n                if (uiContainerRef.current && !uiContainerRef.current.innerHTML.includes('Generated UI will appear here')) {\n                    showStatus('💾 Auto-saving...', 'info');\n                    saveUI();\n                }\n            }, 5000);\n        });\n        if (uiContainerRef.current) {\n            observer.observe(uiContainerRef.current, { childList: true, subtree: true });\n        }\n        return () => observer.disconnect();\n    }, []);\n\n    return (\n        <div className=\"min-h-screen bg-gradient-to-br from-indigo-500 to-purple-600 font-sans text-gray-800\">\n            <div className=\"max-w-7xl mx-auto p-5\">\n                <header className=\"text-center text-white mb-8\">\n                    <h1 className=\"text-4xl font-bold mb-2 text-shadow\">🤖 Agentic RAG UI Generator</h1>\n                    <p className=\"text-lg opacity-90\">Intelligent UI template generation with Retrieval Augmented Generation</p>\n                </header>\n\n                <div className={status.message ? `p-4 rounded-lg mb-4 ${status.type === 'success' ? 'bg-green-100 text-green-800 border border-green-300' : status.type === 'error' ? 'bg-red-100 text-red-800 border border-red-300' : 'bg-blue-100 text-blue-800 border border-blue-300'}` : ''}>\n                    {status.message && <div>{status.message}</div>}\n                </div>\n\n                {loading && (\n                    <div className=\"text-center p-5\">\n                        <div className=\"border-4 border-gray-200 border-t-indigo-500 rounded-full w-10 h-10 animate-spin mx-auto mb-2\"></div>\n                        <p>Agent is processing your request...</p>\n                    </div>\n                )}\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5 mb-5\">\n                    <div className=\"bg-white rounded-xl p-6 shadow-lg backdrop-blur\">\n                        <h2 className=\"text-xl text-gray-700 mb-5 border-b-2 border-gray-200 pb-2\">🎨 Generate UI</h2>\n                        <div className=\"mb-5\">\n                            <label htmlFor=\"commandInput\" className=\"block font-semibold text-gray-700 mb-2\">Describe the UI you want to create:</label>\n                            <input\n                                id=\"commandInput\"\n                                type=\"text\"\n                                value={command}\n                                onChange={(e) => setCommand(e.target.value)}\n                                onKeyPress={(e) => e.key === 'Enter' && generateUI()}\n                                placeholder=\"e.g., Create a modern login form with email and password\"\n                                className=\"w-full p-3 border-2 border-gray-200 rounded-lg focus:outline-none focus:border-indigo-500 focus:ring-2 focus:ring-indigo-100\"\n                            />\n                        </div>\n                        <div className=\"flex flex-wrap gap-2\">\n                            <button onClick={generateUI} className=\"bg-gradient-to-r from-indigo-500 to-purple-600 text-white px-6 py-3 rounded-lg font-semibold hover:shadow-lg hover:-translate-y-0.5 transition\">🚀 Generate UI</button>\n                            <button onClick={saveUI} className=\"bg-gradient-to-r from-green-500 to-green-600 text-white px-6 py-3 rounded-lg font-semibold hover:shadow-lg hover:-translate-y-0.5 transition\">💾 Save UI</button>\n                            <button onClick={clearUI} className=\"bg-gray-100 text-gray-700 border-2 border-gray-200 px-6 py-3 rounded-lg font-semibold hover:shadow-lg hover:-translate-y-0.5 transition\">🧹 Clear</button>\n                        </div>\n                        <div className=\"bg-green-50 border border-green-200 rounded-lg p-4 mt-5\">\n                            <h4 className=\"text-green-800 mb-2\">💡 Example Prompts:</h4>\n                            <ul className=\"list-none\">\n                                {['Create a modern login form with email and password', 'Build an innovative dashboard with dark theme', 'Make a contact form with validation', 'Design a product card with image and price', 'Create a navigation menu with dropdown'].map((prompt) => (\n                                    <li key={prompt} onClick={() => handleExampleClick(prompt)} className=\"text-green-600 cursor-pointer hover:underline py-1\">{prompt}</li>\n                                ))}\n                            </ul>\n                        </div>\n                    </div>\n\n                    <div className=\"bg-white rounded-xl p-6 shadow-lg backdrop-blur\">\n                        <h2 className=\"text-xl text-gray-700 mb-5 border-b-2 border-gray-200 pb-2\">🔍 Search Templates</h2>\n                        <div className=\"mb-5\">\n                            <label htmlFor=\"searchInput\" className=\"block font-semibold text-gray-700 mb-2\">Search for existing templates:</label>\n                            <input\n                                id=\"searchInput\"\n                                type=\"text\"\n                                value={searchQuery}\n                                onChange={(e) => setSearchQuery(e.target.value)}\n                                onKeyPress={(e) => e.key === 'Enter' && searchTemplates()}\n                                placeholder=\"e.g., login form, dashboard, contact form\"\n                                className=\"w-full p-3 border-2 border-gray-200 rounded-lg focus:outline-none focus:border-indigo-500 focus:ring-2 focus:ring-indigo-100\"\n                            />\n                        </div>\n                        <div className=\"flex flex-wrap gap-2\">\n                            <button onClick={searchTemplates} className=\"bg-gradient-to-r from-indigo-500 to-purple-600 text-white px-6 py-3 rounded-lg font-semibold hover:shadow-lg hover:-translate-y-0.5 transition\">🔍 Search</button>\n                            <button onClick={clearSearch} className=\"bg-gray-100 text-gray-700 border-2 border-gray-200 px-6 py-3 rounded-lg font-semibold hover:shadow-lg hover:-translate-y-0.5 transition\">🧹 Clear Results</button>\n                        </div>\n                        <div className=\"mt-5\">\n                            {searchResults.length === 0 ? (\n                                totalFound === 0 && <p className=\"text-gray-500\">No similar templates found.</p>\n                            ) : (\n                                <>\n                                    <h3 className=\"text-lg text-gray-800 mb-4\">Search Results for \"{searchQuery}\" ({totalFound} found)</h3>\n                                    <div className=\"grid gap-4\">\n                                        {searchResults.map((template, index) => {\n                                            const scoreColor = template.similarity_score < 0.2 ? 'bg-green-100 text-green-800' : template.similarity_score < 0.4 ? 'bg-yellow-100 text-yellow-800' : 'bg-red-100 text-red-800';\n                                            return (\n                                                <div key={index} className=\"border border-gray-200 rounded-lg p-4 bg-gray-50\">\n                                                    <div className=\"flex justify-between items-center mb-2\">\n                                                        <h4 className=\"text-gray-800\">{template.component} - {template.purpose}</h4>\n                                                        <span className={`px-2 py-1 rounded text-xs font-bold ${scoreColor}`}>{(1 - template.similarity_score).toFixed(3)} match</span>\n                                                    </div>\n                                                    <div className=\"text-sm text-gray-600 mb-2\">\n                                                        <p><strong>Style:</strong> {template.style}</p>\n                                                        <p><strong>Fields:</strong> {template.fields.join(', ') || 'None'}</p>\n                                                        <p><strong>Source:</strong> {template.source}</p>\n                                                    </div>\n                                                    <div className=\"bg-gray-800 text-gray-200 p-2 rounded font-mono text-xs overflow-x-auto mb-2\">{template.html_preview}</div>\n                                                    <div className=\"flex gap-2\">\n                                                        <button onClick={() => useTemplate(template.template_id)} className=\"bg-indigo-500 text-white px-3 py-1 rounded text-sm hover:shadow-lg hover:-translate-y-0.5 transition\">Use This Template</button>\n                                                        <button onClick={() => viewTemplate(template.template_id)} className=\"bg-gray-200 text-gray-700 px-3 py-1 rounded text-sm hover:shadow-lg hover:-translate-y-0.5 transition\">View Full HTML</button>\n                                                    </div>\n                                                </div>\n                                            );\n                                        })}\n                                    </div>\n                                </>\n                            )}\n                        </div>\n                    </div>\n                </div>\n\n                {reasoning.content && (\n                    <div className=\"bg-gray-50 border border-gray-200 rounded-xl p-6 mb-5\">\n                        <h3 className=\"text-lg text-gray-800 mb-4 flex items-center gap-2\">\n                            {reasoning.source === 'vector_db' && '🔍'}\n                            {reasoning.source === 'mongo_query' && '🗃️'}\n                            {reasoning.source === 'llm_generation_with_context' && '🧠💡'}\n                            {reasoning.source === 'llm_generation_from_scratch' && '✨'}\n                            {reasoning.source === 'error' && '❌'}\n                            Agent Reasoning\n                        </h3>\n                        <div className=\"bg-white p-4 rounded border-l-4 border-indigo-500\">\n                            <p><strong>Source:</strong> {reasoning.source}</p>\n                            <div className=\"font-mono text-sm text-gray-800 whitespace-pre-wrap mt-2\">{reasoning.content}</div>\n                        </div>\n                    </div>\n                )}\n\n                <div className=\"bg-white rounded-xl p-6 shadow-lg backdrop-blur\">\n                    <h2 className=\"text-xl text-gray-700 mb-5 border-b-2 border-gray-200 pb-2\">🎯 Generated UI</h2>\n                    <div ref={uiContainerRef} className=\"bg-gray-50 border-2 border-dashed border-gray-300 rounded-xl p-8 min-h-[300px] overflow-auto\" dangerouslySetInnerHTML={{ __html: uiContent.html }}></div>\n                </div>\n\n                <div className=\"bg-blue-50 border border-blue-200 rounded-xl p-4 mt-5\">\n                    <h4 className=\"text-blue-800 mb-2\">⌨️ Keyboard Shortcuts</h4>\n                    <div className=\"flex justify-between mb-2\">\n                        <span>Generate UI</span>\n                        <span><span className=\"bg-gray-800 text-white px-1.5 py-0.5 rounded text-xs font-mono\">Ctrl</span> + <span className=\"bg-gray-800 text-white px-1.5 py-0.5 rounded:oq text-xs font-mono\">Enter</span></span>\n                    </div>\n                    <div className=\"flex justify-between mb-2\">\n                        <span>Save UI</span>\n                        <span><span className=\"bg-gray-800 text-white px-1.5 py-0.5 rounded text-xs font-mono\">Ctrl</span> + <span className=\"bg-gray-800 text-white px-1.5 py-0.5 rounded text-xs font-mono\">S</span></span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                        <span>Focus Search</span>\n                        <span><span className=\"bg-gray-800 text-white px-1.5 py-0.5 rounded text-xs font-mono\">Ctrl</span> + <span className=\"bg-gray-800 text-white px-1.5 py-0.5 rounded text-xs font-mono\">F</span></span>\n                    </div>\n                </div>\n\n                <div className=\"bg-white rounded-xl p-6 mt-5 shadow-lg backdrop-blur\">\n                    <h2 className=\"text-xl text-gray-700 mb-5 border-b-2 border-gray-200 pb-2\">🧠 How Agentic RAG Works</h2>\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-5\">\n                        <div className=\"bg-green-50 p-4 rounded-lg\">\n                            <h4 className=\"text-green-800 mb-2\">🔍 Search Phase</h4>\n                            <p className=\"text-green-600 text-sm\">Agent searches for similar templates using semantic similarity in the vector database.</p>\n                        </div>\n                        <div className=\"bg-blue-50 p-4 rounded-lg\">\n                            <h4 className=\"text-blue-800 mb-2\">🤔 Decision Phase</h4>\n                            <p className=\"text-blue-600 text-sm\">Agent evaluates search results and decides on the best generation strategy.</p>\n                        </div>\n                        <div className=\"bg-yellow-50 p-4 rounded-lg\">\n                            <h4 className=\"text-yellow-800 mb-2\">🎨 Generation Phase</h4>\n                            <p className=\"text-yellow-600 text-sm\">Agent generates UI using context from retrieved templates or creates from scratch.</p>\n                        </div>\n                    </div>\n                </div>\n\n                {modalContent && (\n                    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\">\n                        <div className=\"bg-white rounded-xl max-w-4xl max-h-[80vh] overflow-auto\">\n                            <div className=\"p-5 border-b border-gray-200 flex justify-between items-center\">\n                                <h3 className=\"text-lg text-gray-800\">Template {modalContent.id}</h3>\n                                <button onClick={() => setModalContent(null)} className=\"text-gray-600 text-2xl\">×</button>\n                            </div>\n                            <div className=\"p-5\">\n                                <pre className=\"font-mono text-sm bg-gray-800 text-gray-200 p-4 rounded\">{modalContent.html}</pre>\n                            </div>\n                            <div className=\"p-5 border-t border-gray-200 flex justify-end gap-2\">\n                                <button onClick={() => copyToClipboard(modalContent.html)} className=\"bg-indigo-500 text-white px-4 py-2 rounded hover:shadow-lg hover:-translate-y-0.5 transition\">Copy HTML</button>\n                                <button onClick={() => setModalContent(null)} className=\"bg-gray-200 text-gray-700 px-4 py-2 rounded hover:shadow-lg hover:-translate-y-0.5 transition\">Close</button>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default App;"],"names":[],"mappings":"AAAA,gCAAgC;AAChC,gBAAgB;AAChB,oCAAoC;AAEpC,0CAA0C;AAC1C,gDAAgD;AAChD,0CAA0C;AAC1C,sDAAsD;AACtD,oEAAoE;AAEpE,wCAAwC;AACxC,+BAA+B;AAE/B,wEAAwE;AACxE,2BAA2B;AAC3B,4DAA4D;AAC5D,8CAA8C;AAC9C,aAAa;AACb,sCAAsC;AAEtC,8CAA8C;AAC9C,iDAAiD;AAEjD,6BAA6B;AAC7B,0CAA0C;AAC1C,UAAU;AAEV,uCAAuC;AACvC,oEAAoE;AACpE,2BAA2B;AAC3B,4DAA4D;AAC5D,kCAAkC;AAClC,mBAAmB;AACnB,6CAA6C;AAC7C,gCAAgC;AAChC,eAAe;AACf,aAAa;AACb,0BAA0B;AAC1B,UAAU;AAEV,gBAAgB;AAChB,eAAe;AACf,qBAAqB;AACrB,yDAAyD;AACzD,gDAAgD;AAChD,sBAAsB;AACtB,6BAA6B;AAC7B,0DAA0D;AAC1D,cAAc;AACd,wFAAwF;AACxF,yBAAyB;AACzB,qBAAqB;AACrB,kCAAkC;AAClC,iEAAiE;AACjE,kBAAkB;AAClB,+BAA+B;AAC/B,oDAAoD;AACpD,0DAA0D;AAC1D,mEAAmE;AACnE,gBAAgB;AAChB,kBAAkB;AAClB,wFAAwF;AACxF,0BAA0B;AAC1B,qBAAqB;AACrB,gBAAgB;AAChB,UAAU;AAGV,qCAAqC;AACrC,wBAAwB;AACxB,YAAY;AACZ,uEAAuE;AACvE,0BAA0B;AAC1B,2DAA2D;AAC3D,6CAA6C;AAC7C,YAAY;AACZ,qCAAqC;AAErC,6CAA6C;AAE7C,4BAA4B;AAC5B,yCAAyC;AACzC,kBAAkB;AAClB,2BAA2B;AAC3B,QAAQ;AACR,OAAO;AAEP,oCAAoC;AACpC,wBAAwB;AACxB,YAAY;AACZ,uDAAuD;AACvD,0BAA0B;AAC1B,2DAA2D;AAC3D,iCAAiC;AACjC,kBAAkB;AAClB,4CAA4C;AAC5C,+BAA+B;AAC/B,cAAc;AACd,YAAY;AACZ,yBAAyB;AACzB,kBAAkB;AAClB,2BAA2B;AAC3B,QAAQ;AACR,OAAO;AAEP,aAAa;AACb,YAAY;AACZ,kBAAkB;AAClB,sDAAsD;AACtD,6CAA6C;AAC7C,mBAAmB;AACnB,0BAA0B;AAC1B,uDAAuD;AACvD,6BAA6B;AAC7B,WAAW;AACX,gBAAgB;AAChB,+BAA+B;AAC/B,yDAAyD;AACzD,6BAA6B;AAC7B,UAAU;AACV,sDAAsD;AACtD,kBAAkB;AAClB,+BAA+B;AAC/B,8DAA8D;AAC9D,eAAe;AACf,4BAA4B;AAC5B,iDAAiD;AACjD,uDAAuD;AACvD,gEAAgE;AAChE,aAAa;AACb,eAAe;AACf,gBAAgB;AAChB,8BAA8B;AAC9B,0DAA0D;AAC1D,6BAA6B;AAC7B,UAAU;AACV,mDAAmD;AACnD,kBAAkB;AAClB,sBAAsB;AACtB,6EAA6E;AAC7E,WAAW;AACX,aAAa;AACb,OAAO;AAGP,IAAI;;;;;AAGJ;;;AAEA,MAAM;IACF,YAAY,UAAU,uBAAuB,CAAE;QAC3C,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,iBAAiB,GAAG;QACzB,IAAI,CAAC,cAAc,GAAG;IAC1B;IAEA,MAAM,WAAW,OAAO,EAAE;QACtB,IAAI;YACA,MAAM,WAAW,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;gBACxD,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE;gBAAQ;YACnC;YACA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,IAAI,SAAS,EAAE,EAAE;gBACb,IAAI,CAAC,iBAAiB,GAAG,KAAK,WAAW;gBACzC,IAAI,CAAC,cAAc,GAAG,KAAK,eAAe;gBAC1C,OAAO;oBACH,SAAS;oBACT,MAAM,KAAK,IAAI;oBACf,YAAY,KAAK,WAAW;oBAC5B,QAAQ,KAAK,MAAM;oBACnB,WAAW,KAAK,eAAe;gBACnC;YACJ,OAAO;gBACH,OAAO;oBACH,SAAS;oBACT,OAAO,KAAK,KAAK;oBACjB,eAAe,KAAK,cAAc;gBACtC;YACJ;QACJ,EAAE,OAAO,OAAO;YACZ,OAAO;gBAAE,SAAS;gBAAO,OAAO,CAAC,eAAe,EAAE,MAAM,OAAO,EAAE;YAAC;QACtE;IACJ;IAEA,MAAM,gBAAgB,KAAK,EAAE,aAAa,CAAC,EAAE;QACzC,IAAI;YACA,MAAM,WAAW,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,EAAE;gBAC7D,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBAAE;oBAAO,aAAa;gBAAW;YAC1D;YACA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,IAAI,SAAS,EAAE,EAAE;gBACb,OAAO;oBACH,SAAS;oBACT,SAAS,KAAK,OAAO;oBACrB,YAAY,KAAK,WAAW;oBAC5B,OAAO,KAAK,KAAK;gBACrB;YACJ,OAAO;gBACH,OAAO;oBAAE,SAAS;oBAAO,OAAO,KAAK,KAAK;gBAAC;YAC/C;QACJ,EAAE,OAAO,OAAO;YACZ,OAAO;gBAAE,SAAS;gBAAO,OAAO,CAAC,eAAe,EAAE,MAAM,OAAO,EAAE;YAAC;QACtE;IACJ;IAEA,MAAM,OAAO,IAAI,EAAE,mBAAmB,IAAI,EAAE,OAAO,WAAW,EAAE;QAC5D,IAAI;YACA,MAAM,WAAW,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;gBACpD,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,MAAM,KAAK,SAAS,CAAC;oBACjB;oBACA,oBAAoB,oBAAoB,IAAI,CAAC,iBAAiB;oBAC9D;gBACJ;YACJ;YACA,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,IAAI,SAAS,EAAE,EAAE;gBACb,IAAI,CAAC,iBAAiB,GAAG,KAAK,WAAW;gBACzC,OAAO;oBACH,SAAS;oBACT,SAAS,KAAK,OAAO;oBACrB,YAAY,KAAK,WAAW;gBAChC;YACJ,OAAO;gBACH,OAAO;oBAAE,SAAS;oBAAO,OAAO,KAAK,KAAK;gBAAC;YAC/C;QACJ,EAAE,OAAO,OAAO;YACZ,OAAO;gBAAE,SAAS;gBAAO,OAAO,CAAC,eAAe,EAAE,MAAM,OAAO,EAAE;YAAC;QACtE;IACJ;AACJ;AAEA,MAAM,YAAY,IAAI;AAEtB,MAAM,MAAM;IACR,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,SAAS;QAAI,MAAM;IAAG;IAC7D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,MAAM;QAA8F,YAAY;QAAI,QAAQ;IAAG;IAC5K,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACrD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,SAAS;QAAI,QAAQ;IAAG;IACrE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE;IAE9B,MAAM,aAAa,CAAC,SAAS;QACzB,UAAU;YAAE;YAAS;QAAK;QAC1B,IAAI,SAAS,SAAS;YAClB,WAAW,IAAM,UAAU;oBAAE,SAAS;oBAAI,MAAM;gBAAG,IAAI;QAC3D;IACJ;IAEA,MAAM,cAAc,CAAC,OAAS,WAAW;IAEzC,MAAM,aAAa;QACf,IAAI,CAAC,QAAQ,IAAI,IAAI;YACjB,WAAW,0CAA0C;YACrD;QACJ;QACA,WAAW,yCAAyC;QACpD,YAAY;QACZ,IAAI;YACA,MAAM,SAAS,MAAM,UAAU,UAAU,CAAC;YAC1C,IAAI,OAAO,OAAO,EAAE;gBAChB,aAAa;oBAAE,MAAM,OAAO,IAAI;oBAAE,YAAY,OAAO,UAAU;oBAAE,QAAQ,OAAO,MAAM;gBAAC;gBACvF,aAAa;oBAAE,SAAS,OAAO,SAAS;oBAAE,QAAQ,OAAO,MAAM;gBAAC;gBAChE,WAAW,CAAC,kCAAkC,EAAE,OAAO,MAAM,CAAC,CAAC,CAAC,EAAE;YACtE,OAAO;gBACH,WAAW,CAAC,SAAS,EAAE,OAAO,KAAK,EAAE,EAAE;gBACvC,IAAI,OAAO,aAAa,EAAE;oBACtB,aAAa;wBAAE,SAAS,OAAO,aAAa;wBAAE,QAAQ;oBAAQ;gBAClE;YACJ;QACJ,EAAE,OAAO,OAAO;YACZ,WAAW,CAAC,oBAAoB,EAAE,MAAM,OAAO,EAAE,EAAE;QACvD,SAAU;YACN,YAAY;QAChB;IACJ;IAEA,MAAM,kBAAkB;QACpB,IAAI,CAAC,YAAY,IAAI,IAAI;YACrB,WAAW,gCAAgC;YAC3C;QACJ;QACA,WAAW,yCAAyC;QACpD,YAAY;QACZ,IAAI;YACA,MAAM,SAAS,MAAM,UAAU,eAAe,CAAC,aAAa;YAC5D,IAAI,OAAO,OAAO,EAAE;gBAChB,iBAAiB,OAAO,OAAO;gBAC/B,cAAc,OAAO,UAAU;gBAC/B,WAAW,CAAC,SAAS,EAAE,OAAO,UAAU,CAAC,kBAAkB,CAAC,EAAE;YAClE,OAAO;gBACH,WAAW,CAAC,gBAAgB,EAAE,OAAO,KAAK,EAAE,EAAE;YAClD;QACJ,EAAE,OAAO,OAAO;YACZ,WAAW,CAAC,iBAAiB,EAAE,MAAM,OAAO,EAAE,EAAE;QACpD,SAAU;YACN,YAAY;QAChB;IACJ;IAEA,MAAM,SAAS;QACX,IAAI,CAAC,eAAe,OAAO,IAAI,eAAe,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,kCAAkC;YACvG,WAAW,sCAAsC;YACjD;QACJ;QACA,WAAW,4BAA4B;QACvC,YAAY;QACZ,IAAI;YACA,MAAM,SAAS,MAAM,UAAU,MAAM,CAAC,eAAe,OAAO,CAAC,SAAS;YACtE,IAAI,OAAO,OAAO,EAAE;gBAChB,WAAW,CAAC,EAAE,EAAE,OAAO,OAAO,CAAC,MAAM,EAAE,OAAO,UAAU,CAAC,CAAC,CAAC,EAAE;YACjE,OAAO;gBACH,WAAW,CAAC,cAAc,EAAE,OAAO,KAAK,EAAE,EAAE;YAChD;QACJ,EAAE,OAAO,OAAO;YACZ,WAAW,CAAC,eAAe,EAAE,MAAM,OAAO,EAAE,EAAE;QAClD,SAAU;YACN,YAAY;QAChB;IACJ;IAEA,MAAM,UAAU;QACZ,aAAa;YAAE,MAAM;YAA8F,YAAY;YAAI,QAAQ;QAAG;QAC9I,aAAa;YAAE,SAAS;YAAI,QAAQ;QAAG;QACvC,WAAW,iBAAiB;IAChC;IAEA,MAAM,cAAc;QAChB,iBAAiB,EAAE;QACnB,eAAe;QACf,cAAc;QACd,WAAW,6BAA6B;IAC5C;IAEA,MAAM,cAAc,CAAC;QACjB,WAAW,CAAC,oBAAoB,EAAE,WAAW,GAAG,CAAC,EAAE;IACvD;IAEA,MAAM,eAAe,CAAC;QAClB,MAAM,WAAW,cAAc,IAAI,CAAC,CAAA,IAAK,EAAE,WAAW,KAAK;QAC3D,IAAI,UAAU;YACV,gBAAgB;gBAAE,IAAI;gBAAY,MAAM,SAAS,YAAY;YAAC;QAClE;IACJ;IAEA,MAAM,kBAAkB,CAAC;QACrB,UAAU,SAAS,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC;YACrC,WAAW,gCAAgC;QAC/C;IACJ;IAEA,MAAM,qBAAqB,CAAC;QACxB,WAAW;QACX;IACJ;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,gBAAgB,CAAC;YACnB,IAAI,EAAE,OAAO,IAAI,EAAE,OAAO,EAAE;gBACxB,EAAE,cAAc;gBAChB,OAAQ,EAAE,GAAG;oBACT,KAAK;wBACD;wBACA;oBACJ,KAAK;wBACD;wBACA;oBACJ,KAAK;wBACD,SAAS,cAAc,CAAC,eAAe,KAAK;wBAC5C;gBACR;YACJ;QACJ;QACA,SAAS,gBAAgB,CAAC,WAAW;QACrC,OAAO,IAAM,SAAS,mBAAmB,CAAC,WAAW;IACzD,GAAG;QAAC;QAAS;KAAU;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,WAAW,IAAI,iBAAiB;YAClC,aAAa,OAAO,eAAe;YACnC,OAAO,eAAe,GAAG,WAAW;gBAChC,IAAI,eAAe,OAAO,IAAI,CAAC,eAAe,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,kCAAkC;oBACvG,WAAW,qBAAqB;oBAChC;gBACJ;YACJ,GAAG;QACP;QACA,IAAI,eAAe,OAAO,EAAE;YACxB,SAAS,OAAO,CAAC,eAAe,OAAO,EAAE;gBAAE,WAAW;gBAAM,SAAS;YAAK;QAC9E;QACA,OAAO,IAAM,SAAS,UAAU;IACpC,GAAG,EAAE;IAEL,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC;YAAI,WAAU;;8BACX,8OAAC;oBAAO,WAAU;;sCACd,8OAAC;4BAAG,WAAU;sCAAsC;;;;;;sCACpD,8OAAC;4BAAE,WAAU;sCAAqB;;;;;;;;;;;;8BAGtC,8OAAC;oBAAI,WAAW,OAAO,OAAO,GAAG,CAAC,oBAAoB,EAAE,OAAO,IAAI,KAAK,YAAY,wDAAwD,OAAO,IAAI,KAAK,UAAU,kDAAkD,oDAAoD,GAAG;8BAC1Q,OAAO,OAAO,kBAAI,8OAAC;kCAAK,OAAO,OAAO;;;;;;;;;;;gBAG1C,yBACG,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAI,WAAU;;;;;;sCACf,8OAAC;sCAAE;;;;;;;;;;;;8BAIX,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAI,WAAU;;8CACX,8OAAC;oCAAG,WAAU;8CAA6D;;;;;;8CAC3E,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;4CAAM,SAAQ;4CAAe,WAAU;sDAAyC;;;;;;sDACjF,8OAAC;4CACG,IAAG;4CACH,MAAK;4CACL,OAAO;4CACP,UAAU,CAAC,IAAM,WAAW,EAAE,MAAM,CAAC,KAAK;4CAC1C,YAAY,CAAC,IAAM,EAAE,GAAG,KAAK,WAAW;4CACxC,aAAY;4CACZ,WAAU;;;;;;;;;;;;8CAGlB,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;4CAAO,SAAS;4CAAY,WAAU;sDAAiJ;;;;;;sDACxL,8OAAC;4CAAO,SAAS;4CAAQ,WAAU;sDAA+I;;;;;;sDAClL,8OAAC;4CAAO,SAAS;4CAAS,WAAU;sDAA0I;;;;;;;;;;;;8CAElL,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;4CAAG,WAAU;sDAAsB;;;;;;sDACpC,8OAAC;4CAAG,WAAU;sDACT;gDAAC;gDAAsD;gDAAiD;gDAAuC;gDAA8C;6CAAyC,CAAC,GAAG,CAAC,CAAC,uBACzO,8OAAC;oDAAgB,SAAS,IAAM,mBAAmB;oDAAS,WAAU;8DAAsD;mDAAnH;;;;;;;;;;;;;;;;;;;;;;sCAMzB,8OAAC;4BAAI,WAAU;;8CACX,8OAAC;oCAAG,WAAU;8CAA6D;;;;;;8CAC3E,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;4CAAM,SAAQ;4CAAc,WAAU;sDAAyC;;;;;;sDAChF,8OAAC;4CACG,IAAG;4CACH,MAAK;4CACL,OAAO;4CACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;4CAC9C,YAAY,CAAC,IAAM,EAAE,GAAG,KAAK,WAAW;4CACxC,aAAY;4CACZ,WAAU;;;;;;;;;;;;8CAGlB,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;4CAAO,SAAS;4CAAiB,WAAU;sDAAiJ;;;;;;sDAC7L,8OAAC;4CAAO,SAAS;4CAAa,WAAU;sDAA0I;;;;;;;;;;;;8CAEtL,8OAAC;oCAAI,WAAU;8CACV,cAAc,MAAM,KAAK,IACtB,eAAe,mBAAK,8OAAC;wCAAE,WAAU;kDAAgB;;;;;6DAEjD;;0DACI,8OAAC;gDAAG,WAAU;;oDAA6B;oDAAqB;oDAAY;oDAAI;oDAAW;;;;;;;0DAC3F,8OAAC;gDAAI,WAAU;0DACV,cAAc,GAAG,CAAC,CAAC,UAAU;oDAC1B,MAAM,aAAa,SAAS,gBAAgB,GAAG,MAAM,gCAAgC,SAAS,gBAAgB,GAAG,MAAM,kCAAkC;oDACzJ,qBACI,8OAAC;wDAAgB,WAAU;;0EACvB,8OAAC;gEAAI,WAAU;;kFACX,8OAAC;wEAAG,WAAU;;4EAAiB,SAAS,SAAS;4EAAC;4EAAI,SAAS,OAAO;;;;;;;kFACtE,8OAAC;wEAAK,WAAW,CAAC,oCAAoC,EAAE,YAAY;;4EAAG,CAAC,IAAI,SAAS,gBAAgB,EAAE,OAAO,CAAC;4EAAG;;;;;;;;;;;;;0EAEtH,8OAAC;gEAAI,WAAU;;kFACX,8OAAC;;0FAAE,8OAAC;0FAAO;;;;;;4EAAe;4EAAE,SAAS,KAAK;;;;;;;kFAC1C,8OAAC;;0FAAE,8OAAC;0FAAO;;;;;;4EAAgB;4EAAE,SAAS,MAAM,CAAC,IAAI,CAAC,SAAS;;;;;;;kFAC3D,8OAAC;;0FAAE,8OAAC;0FAAO;;;;;;4EAAgB;4EAAE,SAAS,MAAM;;;;;;;;;;;;;0EAEhD,8OAAC;gEAAI,WAAU;0EAAgF,SAAS,YAAY;;;;;;0EACpH,8OAAC;gEAAI,WAAU;;kFACX,8OAAC;wEAAO,SAAS,IAAM,YAAY,SAAS,WAAW;wEAAG,WAAU;kFAAuG;;;;;;kFAC3K,8OAAC;wEAAO,SAAS,IAAM,aAAa,SAAS,WAAW;wEAAG,WAAU;kFAAwG;;;;;;;;;;;;;uDAb3K;;;;;gDAiBlB;;;;;;;;;;;;;;;;;;;;;;;;;gBAQvB,UAAU,OAAO,kBACd,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAG,WAAU;;gCACT,UAAU,MAAM,KAAK,eAAe;gCACpC,UAAU,MAAM,KAAK,iBAAiB;gCACtC,UAAU,MAAM,KAAK,iCAAiC;gCACtD,UAAU,MAAM,KAAK,iCAAiC;gCACtD,UAAU,MAAM,KAAK,WAAW;gCAAI;;;;;;;sCAGzC,8OAAC;4BAAI,WAAU;;8CACX,8OAAC;;sDAAE,8OAAC;sDAAO;;;;;;wCAAgB;wCAAE,UAAU,MAAM;;;;;;;8CAC7C,8OAAC;oCAAI,WAAU;8CAA4D,UAAU,OAAO;;;;;;;;;;;;;;;;;;8BAKxG,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAG,WAAU;sCAA6D;;;;;;sCAC3E,8OAAC;4BAAI,KAAK;4BAAgB,WAAU;4BAA+F,yBAAyB;gCAAE,QAAQ,UAAU,IAAI;4BAAC;;;;;;;;;;;;8BAGzL,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAG,WAAU;sCAAqB;;;;;;sCACnC,8OAAC;4BAAI,WAAU;;8CACX,8OAAC;8CAAK;;;;;;8CACN,8OAAC;;sDAAK,8OAAC;4CAAK,WAAU;sDAAiE;;;;;;wCAAW;sDAAG,8OAAC;4CAAK,WAAU;sDAAoE;;;;;;;;;;;;;;;;;;sCAE7L,8OAAC;4BAAI,WAAU;;8CACX,8OAAC;8CAAK;;;;;;8CACN,8OAAC;;sDAAK,8OAAC;4CAAK,WAAU;sDAAiE;;;;;;wCAAW;sDAAG,8OAAC;4CAAK,WAAU;sDAAiE;;;;;;;;;;;;;;;;;;sCAE1L,8OAAC;4BAAI,WAAU;;8CACX,8OAAC;8CAAK;;;;;;8CACN,8OAAC;;sDAAK,8OAAC;4CAAK,WAAU;sDAAiE;;;;;;wCAAW;sDAAG,8OAAC;4CAAK,WAAU;sDAAiE;;;;;;;;;;;;;;;;;;;;;;;;8BAI9L,8OAAC;oBAAI,WAAU;;sCACX,8OAAC;4BAAG,WAAU;sCAA6D;;;;;;sCAC3E,8OAAC;4BAAI,WAAU;;8CACX,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;4CAAG,WAAU;sDAAsB;;;;;;sDACpC,8OAAC;4CAAE,WAAU;sDAAyB;;;;;;;;;;;;8CAE1C,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;4CAAG,WAAU;sDAAqB;;;;;;sDACnC,8OAAC;4CAAE,WAAU;sDAAwB;;;;;;;;;;;;8CAEzC,8OAAC;oCAAI,WAAU;;sDACX,8OAAC;4CAAG,WAAU;sDAAuB;;;;;;sDACrC,8OAAC;4CAAE,WAAU;sDAA0B;;;;;;;;;;;;;;;;;;;;;;;;gBAKlD,8BACG,8OAAC;oBAAI,WAAU;8BACX,cAAA,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCAAI,WAAU;;kDACX,8OAAC;wCAAG,WAAU;;4CAAwB;4CAAU,aAAa,EAAE;;;;;;;kDAC/D,8OAAC;wCAAO,SAAS,IAAM,gBAAgB;wCAAO,WAAU;kDAAyB;;;;;;;;;;;;0CAErF,8OAAC;gCAAI,WAAU;0CACX,cAAA,8OAAC;oCAAI,WAAU;8CAA2D,aAAa,IAAI;;;;;;;;;;;0CAE/F,8OAAC;gCAAI,WAAU;;kDACX,8OAAC;wCAAO,SAAS,IAAM,gBAAgB,aAAa,IAAI;wCAAG,WAAU;kDAA+F;;;;;;kDACpK,8OAAC;wCAAO,SAAS,IAAM,gBAAgB;wCAAO,WAAU;kDAAgG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQxL;uCAEe","debugId":null}},
    {"offset": {"line": 1349, "column": 0}, "map": {"version":3,"sources":["file:///Users/user/Desktop/Venkat/LCNC/FE/src/app/page.tsx"],"sourcesContent":["import BlockEditor from \"@/components/automater\";\nexport default function Home() {\n  return (\n   <main className=\"max-w-2xl mx-auto p-6\">\n      <h1 className=\"text-2xl font-bold mb-4\">Agentic UI Automator</h1>\n      <BlockEditor />\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AACe,SAAS;IACtB,qBACC,8OAAC;QAAK,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;0BACxC,8OAAC,8HAAA,CAAA,UAAW;;;;;;;;;;;AAGlB","debugId":null}}]
}